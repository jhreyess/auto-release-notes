name: Automate Release Notes
description: 'Generates release notes based on commit messages since the last tag'
inputs:
  default-branch: 
    description: 'default branch or tag to compare'
    required: false
    default: 'origin/main'
runs:
  using: "composite"
  steps:
    - name: Get Previous tag
      run: echo "PREV=$(git describe --abbrev=0 --tags $LAST_TAG^)" >> $GITHUB_ENV
      shell: bash
      env:
        LAST_TAG: ${{ github.ref_name }}
    
    - name: List files
      run: ls -al
      shell: bash

    - name: Make script executable
      run: |
        cd ${{ github.action_path }}
        chmod +x generate-notes.sh
      shell: bash

    - name: Generate Release Notes
      run: |
        # Initialize the release notes file
        echo "# Release Notes" > release-notes.md
        echo "## Changes since $PREV" >> release-notes.md

        features=()
        fixes=()
        others=()

        # Classify commits
        git log --pretty=tformat:"%s" $PREV..$LAST_TAG --no-merges | while read -r commit;
        do
            if [[ $commit == feat* ]]; then
              features+=("$commit")
            elif [[ $commit == fix* ]]; then
              fixes+=("$commit")
            else
              others+=("$commit")
            fi
        done;

        # Add "Features" section if there are feature commits
        if [ ${#features[@]} -gt 0 ]; then
            echo "### Features" >> release-notes.md
            for feat in "${features[@]}"; do echo "- $feat" >> release-notes.md; done;
            echo "" >> release-notes.md
        fi

        # Add "Bug Fixes" section if there are fix commits
        if [ ${#fixes[@]} -gt 0 ]; then
            echo "### Bug Fixes" >> release-notes.md;
            for fix in "${fixes[@]}"; do echo "- $fix" >> release-notes.md; done;
            echo "" >> release-notes.md
        fi

        # Add "Other Commits" section if there are other commits
        if [ ${#others[@]} -gt 0 ]; then
            echo "### Other Commits" >> release-notes.md
            for other in "${others[@]}"; do echo "- $other" >> release-notes.md; done;
        fi
      shell: bash
      env:
        LAST_TAG: ${{ github.ref_name }}

    - name: Output release notes
      run: cat release-notes.md
      shell: bash
